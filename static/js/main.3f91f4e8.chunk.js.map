{"version":3,"sources":["utils/calculator.js","App.js","serviceWorker.js","index.js"],"names":["convertSecToTime","secs","seconds","minutes","Math","floor","hours","toString","padStart","convertTimeToSec","value","time","parseInt","slice","fixInputTime","displayTime","focused","length","className","App","useState","unit","setUnit","pace","setPace","distance","setDistance","setTime","timeFocused","setTimeFocused","paceFocused","setPaceFocused","dropdown","setDropdown","calcFromDistance","test","dropdownClick","dist","convertedDist","convertDistance","selectedUnit","toFixed","onClick","onBlur","setTimeout","htmlFor","onKeyDown","e","includes","keyCode","preventDefault","type","id","pattern","onChange","event","target","document","getElementById","focus","xmlns","viewBox","fill","width","height","d","style","display","justifyContent","min","parseFloat","calcFromTime","calcFromPace","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3f91f4e8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const paceCalculator = (time, distance) => {\n  return time/distance;\n};\n\nexport const timeCalculator = (pace, distance) => {\n  return pace * distance;\n}\n\nexport const convertSecToTime = secs => {\n  let seconds = secs % 60;\n  let minutes = Math.floor(secs / 60) % 60;\n  let hours = Math.floor(secs / 60 / 60);\n\n  seconds = seconds.toString().padStart(2, \"0\");\n  minutes = minutes.toString().padStart(2, \"0\");\n  hours = hours.toString().padStart(2, \"0\");\n\n  return `${hours}${minutes}${seconds}`;\n};\n\nexport const convertTimeToSec = (value) => {\n  const time = value.padStart(6, \"0\");\n  let hours = parseInt(time.slice(0,2));\n  let minutes = parseInt(time.slice(2,4));\n  let seconds = parseInt(time.slice(4,6));\n\n  return hours * 60 * 60 + minutes * 60 + seconds;\n};\n\nexport const fixInputTime = value => {\n  const time = value.padStart(6, \"0\");\n  let hours = parseInt(time.slice(0,2));\n  let minutes = parseInt(time.slice(2,4));\n  let seconds = parseInt(time.slice(4,6));\n\n  if (seconds > 59) {\n    minutes+=1;\n    seconds%=60;\n  }\n  if (minutes > 59) {\n    hours+=1;\n    minutes%=60;\n  }\n\n  seconds = seconds.toString().padStart(2, \"0\");\n  minutes = minutes.toString().padStart(2, \"0\");\n  hours = hours.toString().padStart(2, \"0\");\n\n  return `${hours}${minutes}${seconds}`;\n}\n\nexport const displayTime = (value, focused) => {\n  if (value.length > 6) return 'MAX';\n  const time = value.padStart(6, \"0\");\n  let hours = time.slice(0,2);\n  let minutes = time.slice(2,4);\n  let seconds = time.slice(4,6);\n  return (\n    <div className=\"display\">\n      {\n        focused ?\n        <span>{hours > 0 && <span>{hours}<span className=\"unit\">h</span></span>} {(hours > 0 || minutes > 0) && <span>{minutes}<span className=\"unit\">m</span></span>} {seconds}<span className=\"chev\" /><span className=\"unit\">s</span></span> :\n        <span>{hours > 0 && <span>{parseInt(hours)}<span className=\"unit\">h</span></span>} {(hours > 0 || minutes > 0) && <span>{parseInt(minutes)}<span className=\"unit\">m</span></span>} {parseInt(seconds)}<span className=\"chev\" /><span className=\"unit\">s</span></span>\n      }\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport './App.css';\nimport {convertSecToTime, convertTimeToSec, displayTime, fixInputTime} from './utils/calculator.js';\n\nfunction App() {\n  const [unit, setUnit] = useState('mi');\n  const [pace, setPace] = useState('');\n  const [distance, setDistance] = useState('26.2');\n  const [time, setTime] = useState('');\n\n  const [timeFocused, setTimeFocused] = useState(false);\n  const [paceFocused, setPaceFocused] = useState(false);\n  const [dropdown, setDropdown] = useState(false);\n\n\n  const calcFromDistance = (value) => {\n    if(/[a-zA-Z]/.test(value)) return;\n    value = value.slice(-5);\n    if (time) {\n      const secs = convertTimeToSec(time);\n      const pace = Math.floor(secs / value);\n      setPace(convertSecToTime(value ? pace : 0));\n    } else if (pace) {\n      const secs = convertTimeToSec(pace);\n      setTime(convertSecToTime(Math.floor(secs * value)));\n    }\n    setDistance(value);\n  };\n\n  const calcFromTime = (value) => {\n    value = value.slice(-6);\n    const secs = convertTimeToSec(value);\n    if (distance) {\n      const pace = convertSecToTime(Math.floor(secs / parseFloat(distance)));\n      setPace(pace);\n    };\n    setTime(value);\n  };\n\n  const calcFromPace = (value) => {\n    value = value.slice(-6);\n    const secs = convertTimeToSec(value);\n    if (distance) {\n      setTime(convertSecToTime(secs * parseFloat(distance)));\n    };\n    setPace(value);\n  };\n\n  const dropdownClick = (dist) => {\n    setDropdown(false);\n    let convertedDist;\n    switch (dist) {\n      case 'marathon':\n        convertedDist = unit === 'mi' ? '26.2' : '42.195';\n        break;\n      case 'half-marathon':\n        convertedDist = unit === 'mi' ? '13.1' : '21.0975';\n        break;\n      case '5k':\n        convertedDist = unit === 'mi' ? '3.1' : '5';\n        break;\n      case '10k':\n        convertedDist = unit === 'mi' ? '6.2' : '10';\n        break;\n      default:\n        return;\n    }\n    calcFromDistance(convertedDist);\n  }\n\n  const convertDistance = (selectedUnit) => {\n    if (unit !== selectedUnit) {\n      setUnit(selectedUnit);\n      setDistance(selectedUnit === 'mi' ? (distance/1.60934).toFixed(1) : (distance*1.60934).toFixed(1));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Running Time & Pace Converter</h1>\n      <div className=\"container\">\n        <div className=\"tabs\">\n          <div className={\"mi select \" + (unit === 'mi' ? 'selected': '')} onClick={() => {convertDistance('mi');}}>Miles</div>\n          <div className={\"km select \" + (unit === 'km' ? 'selected': '')} onClick={() => {convertDistance('km');}}>Kilometers</div>\n        </div>\n        <div className=\"inputs\">\n          <div className=\"distance\" onBlur={() => {setTimeout(() => setDropdown(false), 100)}}>\n            <label htmlFor=\"distance\">Distance</label>\n            <input\n              onKeyDown={e => {if ([37,39].includes(e.keyCode)) {e.preventDefault()}}}\n              type=\"tel\"\n              id=\"distance\"\n              pattern=\"\\d*\"\n              value={distance}\n              onChange={event => {calcFromDistance(event.target.value)}}\n            />\n            <div className=\"displayInput\" onClick={() => {document.getElementById('distance').focus()}}>\n              {distance ? distance : '0'}\n              <span className=\"chev\"/>\n              <span className=\"down-arrow\" onClick={() => setDropdown(true)}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\" width=\"28px\" height=\"28px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/></svg></span>\n            </div>\n            <span style={{display: 'flex', justifyContent: 'flex-end'}}>{unit === 'mi' ? 'mi' : 'km'}</span>\n            {\n              dropdown && <div className=\"dropdown\">\n                <div onClick={() => dropdownClick('marathon')}>marathon</div>\n                <div onClick={() => dropdownClick('half-marathon')}>half-marathon</div>\n                <div onClick={() => dropdownClick('10k')}>10k</div>\n                <div onClick={() => dropdownClick('5k')}>5k</div>\n              </div>\n            }\n          </div>\n\n          <div className=\"time\">\n            <label htmlFor=\"time\">Time</label>\n            <input\n              onKeyDown={e => {if ([37,39, 189].includes(e.keyCode)) {e.preventDefault()}}}\n              type=\"number\"\n              min=\"0\"\n              id=\"time\"\n              value={time}\n              onBlur={() => {\n                setTime(fixInputTime(time));\n                setTimeFocused(false);\n              }}\n              onChange={event => calcFromTime(event.target.value)}\n            />\n            <div className=\"displayInput\" onClick={() => {document.getElementById('time').focus(); setTimeFocused(true);}}>{displayTime(time, timeFocused)}</div>\n          </div>\n\n          <div className=\"pace\">\n            <label htmlFor=\"pace\">Pace</label>\n            <input\n              onKeyDown={e => {if ([37,39,189].includes(e.keyCode)) {e.preventDefault()}}}\n              type=\"number\"\n              min=\"0\"\n              id=\"pace\"\n              value={pace}\n              onBlur={() => {\n                setPace(fixInputTime(pace));\n                setPaceFocused(false);\n              }}\n              onChange={event => calcFromPace(event.target.value)}/>\n            <div className=\"displayInput\" onClick={() => {document.getElementById('pace').focus(); setPaceFocused(true);}}>{displayTime(pace, paceFocused)}</div>\n            <span style={{display: 'flex', justifyContent: 'flex-end'}}>per {unit === 'mi' ? 'mi' : 'km'}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}